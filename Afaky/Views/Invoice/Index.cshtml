@model Afaky.Models.InvoiceMasterViewModel

@{
    ViewData["Title"] = "InvoiceBill";
}

<div  class="col-md-12">

    <div class="col-md-6">

        @Html.DropDownListFor(m => m.Id, new SelectList(ViewBag.Invoice, "Id", "Notes"), "اختر", new { @class = "form-control ", @id = "InvoiceId" })

    </div>

</div>

<center><h1>InvoiceBill</h1></center>

<hr />
<div class="row">



    <!-- BEGIN FORM-->
    <form asp-action="Index">
        <div class="modal-body">
            @Html.HiddenFor(a => a.Id, new { @id = "hiddenId" })
            <div class="form-body">
                <div class="row">
                    <div class="col-md-6 ">
                        <div class="form-group">

                            @Html.LabelFor(m => m.DateInvoice, new { @class = "control-label text-green" })

                            <div class="input-icon">
                                <i class="fa fa-calendar-o"></i>
                                <input asp-for="DateInvoice" class="form-control" id="Datetxt" />
                            </div>
                            <center>@Html.ValidationMessageFor(a => a.DateInvoice)</center>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">

                            @Html.LabelFor(m => m.CustomerId, new { @class = "control-label col-md-6" })


                            @Html.DropDownListFor(m => m.CustomerId, new SelectList(ViewBag.Customer, "Id", "Name"), new { @class = "form-control ", @id = "CustId" })
                            <center>@Html.ValidationMessageFor(a => a.CustomerId)</center>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">

                            @Html.LabelFor(m => m.StoreId, new { @class = "control-label col-md-6" })


                            @Html.DropDownListFor(m => m.StoreId, new SelectList(ViewBag.Store, "Id", "Name"), new { @class = "form-control ", @id = "StoreId" })
                            <center>@Html.ValidationMessageFor(a => a.StoreId)</center>
                        </div>
                    </div>
                    <div class="col-md-6 ">
                        <div class="form-group">

                            @Html.LabelFor(m => m.Notes, new { @class = "control-label text-green" })

                            @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", @id = "Notestxt" })
                            <center>@Html.ValidationMessageFor(a => a.Notes)</center>
                        </div>
                    </div>
                    @*<div class="col-md-3 ">
                            <div class="form-group">
                                <center>
                                    @Html.LabelFor(m => m.SumPrice, new { @class = "control-label text-green" })
                                </center>
                                @Html.TextBoxFor(m => m.SumPrice, new { @class = "form-control", @id = "Totaltxt", @readonly = "true" })
                                <center>@Html.ValidationMessageFor(a => a.SumPrice)</center>
                            </div>
                        </div>
                        <div class="col-md-3 ">
                            <div class="form-group">
                                <center>
                                    @Html.LabelFor(m => m.DiscountPrecent, new { @class = "control-label text-green" })
                                </center>
                                @Html.TextBoxFor(m => m.DiscountPrecent, new { @class = "form-control", @id = "DiscountPrecenttxt", Value = "1", type = "number", min = "1", step = "0.01" })
                                <center>@Html.ValidationMessageFor(a => a.DiscountPrecent)</center>
                            </div>
                        </div>*@
                    @*<div class="col-md-3 ">
                            <div class="form-group">

                                    @Html.LabelFor(m => m.DiscountVal, new { @class = "control-label text-green" })

                                @Html.TextBoxFor(m => m.DiscountVal, new { @class = "form-control", @id = "DiscountValtxt", @readonly = "true" })
                                <center>@Html.ValidationMessageFor(a => a.DiscountVal)</center>
                            </div>
                        </div>
                        <div class="col-md-3 ">
                            <div class="form-group">

                                    @Html.LabelFor(m => m.Net, new { @class = "control-label text-green" })
                                @Html.TextBoxFor(m => m.Net, new { @class = "form-control", @id = "Nettxt", @readonly = "true" })
                                <center>@Html.ValidationMessageFor(a => a.Net)</center>
                            </div>
                        </div>*@
                </div>

            </div>
        </div>

        <div class="details">
            <table class="table table-responsive" id="ExpTable">
                <thead>
                    <tr>
                        <td>Product</td>
                        <td>Qty</td>
                        <td>Price</td>
                        <td>Total</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @*@foreach (var item in Model.Details)*@
                    @for (int i = 0; i < Model.Details.Count(); i++)
                    {
                        <tr>
                            <td class="align-content-lg-stretch">
                                @Html.DropDownListFor(m => m.Details[i].ProductId, new SelectList(ViewBag.Product, "Id", "Name"), "اختر", new { @class = "form-control select2", @id = "ProductId" })
                                <center>@Html.ValidationMessageFor(a => a.ProductId)</center>


                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.Details[i].Qty, new { @class = "form-control", Value = "1", type = "number", min = "1", step = "0.01" })
                                <center>@Html.ValidationMessageFor(a => a.Qty)</center>

                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.Details[i].Price, new { @class = "form-control", Value = "1", type = "number", min = "1", step = "0.01" })
                                <center>@Html.ValidationMessageFor(a => a.Price)</center>

                            </td>
                            @*<td>
                                    @Html.TextBoxFor(m => m.Details[i].Total, new { @class = "form-control",  Value = "1", type = "number", min = "1", step = "0.01", @readonly = "true" })
                                </td>*@
                            <td>
                                <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)">Add</button>
                                <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible" onclick="DeleteItem(this)">Delete</button>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>


        </div>
        <input type="hidden" id="hdnLastIndex" value="0" />
        <!-- END FORM-->
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </form>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script>

        //$(document).ready(function () {
        //    for (var i = 0; i < length; i++) {
        //        $('#Details[i].Qty').on('change',
        //            function () {
        //                calcTotal($('#Details[i].Qty').val(), $('#Details[i].Price').val());
        //            });
        //        $('#Pricetxt').on('change',
        //            function () {
        //                calcTotal($('#Qtytxt').val(), $('#Pricetxt').val());
        //            });
        //    });

        //function calcTotal(amount, rate) {
        //    $('#TotalDtxt').val(amount * rate);
        //}



        $(document).ready(function () {
            $('#InvoiceId').on('change',
                function () {
                    $.ajax({
                        type: "get",
                        url: "/Invoice/GetBuyId",
                        data: { "id": $("#InvoiceId").val() },
                        success: function (response) {
                            console.log(response);
                            $('#hiddenId').val(response.Id)
                            $('#CustId').val(response.CustomerId);
                            $('#CustId').trigger('change.select2');
                            $('#StoreId').val(response.StoreId);
                            $('#StoreId').trigger('change.select2');
                            $('#Notestxt').val(response.Notes);
                            $('#Datetxt').val(response.DateInvoice);
                            $.each(response.Details, function (i, v) {
                                var button = '<button id="btnadd" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)">Add</button>';

                                AddItem(button);

                            }

                            )


                        }
                });
                    });
        });

        function DeleteItem(btn) {
            $(btn).closest('tr').remove();
        }



        function AddItem(btn) {


            var table = document.getElementById('ExpTable');
            var rows = table.getElementsByTagName('tr');

            var rowOuterHtml = rows[rows.length - 1].outerHTML;

            var lastrowIdx = document.getElementById('hdnLastIndex').value;

            var nextrowIdx = eval(lastrowIdx) + 1;

            document.getElementById('hdnLastIndex').value = nextrowIdx;





            rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);
            var newRow = table.insertRow();
            newRow.find("td:eq(0)").text(response.Details.ProductId),
                newRow.find("td:eq(3)").text(response.Details.Price),
                newRow.find("td:eq(2)").text(response.Details.Qty),
                newRow.find("td:eq(4)").text(response.Details.Total)
            newRow.innerHTML = rowOuterHtml;






            var btnAddID = btn.id;
            var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

            var delbtn = document.getElementById(btnDeleteid);
            delbtn.classList.add("visible");
            delbtn.classList.remove("invisible");


            var addbtn = document.getElementById(btnAddID);
            addbtn.classList.remove("visible");
            addbtn.classList.add("invisible");



        }
    </script>


}
